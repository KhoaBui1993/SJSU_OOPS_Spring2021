The different between primitive data type int and class Integer:
int:
1. Type: A int is a primitive data type that stores 32 bit signed two's compliment integer.
2. Purpose: int helps in storing integer value into memory.
3. Flexibility: int provides less flexibility as compare to Integer as it only allows binary value of an integer in it.
4. Casting: In java one cant assign a string value (containing an integer only) to an int variable directly or even by casting.
5. Direct Conversion to Other base: In case of int we can't convert its integer value to other base.

Integer:
1. Type: Integer is a wrapper class which wraps a primitive type int into an object. Takes 16 bytes to store.
2. Purpose: Integer helps in converting int into object and to convert an object into int as per requirement.
3. Flexibility: Integer on other hand is more flexible in storing and manipulating an int data.Since Wrapper classes inherit Object class, they can be used in collections with Object reference or generics.
4. Casting: In case of Integer we can assign string to an object of Integer type using the Integer(String) constructor or by even use parseInt(String) to convert a String literal to an int value.
5. Direct Conversion to other base: Integer we can directly convert its integer value to other bases such as Binary, Octal or Hexadecimal format using toBinaryString(), toOctalString() or toHexString() respectively.

Advantages:
int: 	
	Take Less memory.
	Immutable
	Useful when normal mathematical operatios are required
	It is a value type, so it's stored in the Stack area of the memory, then operations on it are faster.
Integer:
	Take more mmemory.
	It is a reference type, you can serialize or deserialize it.
	It has useful utility method.
	It can be used into declarations of the generic types and supports the hierachy.
	It stored in the Heap area of the memory.
	
